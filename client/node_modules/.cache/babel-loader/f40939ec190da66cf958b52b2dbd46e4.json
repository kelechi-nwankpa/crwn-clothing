{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Patrick Iwara\\\\Desktop\\\\crwn-clothing\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport { connect } from 'react-redux';\nimport './sign-up.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  _s();\n\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    signUpStart({\n      email,\n      password,\n      displayName\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-up\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"I do not have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign up with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        name: \"displayName\",\n        value: displayName,\n        onChange: handleChange,\n        label: \"DisplayName\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        name: \"email\",\n        value: email,\n        onChange: handleChange,\n        label: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        onChange: handleChange,\n        label: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"confirmPassword\",\n        value: confirmPassword,\n        onChange: handleChange,\n        label: \"Confirm Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        type: \"submit\",\n        children: \" SIGN UP \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 13\n  }, this);\n};\n\n_s(SignUp, \"pv5tcCnLYRqO6NoADe61jYuOOnk=\");\n\n_c = SignUp;\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/Users/Patrick Iwara/Desktop/crwn-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","FormInput","CustomButton","signUpStart","connect","SignUp","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\n\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport { signUpStart } from '../../redux/user/user.actions'\r\nimport { connect } from 'react-redux';\r\n\r\nimport './sign-up.styles.scss';\r\n\r\nconst SignUp = ({ signUpStart }) => {\r\n    const [userCredentials, setUserCredentials] = useState({\r\n      displayName: '',\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: ''\r\n    });\r\n    \r\n    const { displayName, email, password, confirmPassword } = userCredentials;\r\n    \r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if( password !== confirmPassword ) {\r\n            alert(\"passwords don't match\");\r\n            return;\r\n        }\r\n        signUpStart({email, password, displayName});\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setUserCredentials({...userCredentials, [name]:value })\r\n    }\r\n        return(\r\n            <div className='sign-up'>\r\n                <h2 className='title'>I do not have an account</h2>\r\n                <span>Sign up with your email and password</span>\r\n                <form className='sign-up-form' onSubmit={ handleSubmit }>\r\n                   <FormInput\r\n                     type='text'\r\n                     name='displayName'\r\n                     value={displayName}\r\n                     onChange={handleChange}\r\n                     label='DisplayName'\r\n                     required\r\n                   /> \r\n                   <FormInput\r\n                     type='text'\r\n                     name='email'\r\n                     value={email}\r\n                     onChange={handleChange}\r\n                     label='Email'\r\n                     required\r\n                   /> \r\n                   <FormInput\r\n                     type='password'\r\n                     name='password'\r\n                     value={password}\r\n                     onChange={ handleChange}\r\n                     label='Password'\r\n                     required\r\n                   />\r\n                   <FormInput\r\n                     type='password'\r\n                     name='confirmPassword'\r\n                     value={confirmPassword}\r\n                     onChange={handleChange}\r\n                     label='Confirm Password'\r\n                     required\r\n                   />\r\n                   <CustomButton type='submit'> SIGN UP </CustomButton>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signUpStart: (userCredentials) => dispatch(\r\n        signUpStart(userCredentials)\r\n        )\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}